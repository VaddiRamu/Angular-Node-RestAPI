import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  LexRuntimeV2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../LexRuntimeV2Client";
import {
  RecognizeTextRequest,
  RecognizeTextResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface RecognizeTextCommandInput extends RecognizeTextRequest {}
export interface RecognizeTextCommandOutput
  extends RecognizeTextResponse,
    __MetadataBearer {}
export declare class RecognizeTextCommand extends $Command<
  RecognizeTextCommandInput,
  RecognizeTextCommandOutput,
  LexRuntimeV2ClientResolvedConfig
> {
  readonly input: RecognizeTextCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: RecognizeTextCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: LexRuntimeV2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<RecognizeTextCommandInput, RecognizeTextCommandOutput>;
  private serialize;
  private deserialize;
}
